generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String    @id @default(cuid())
  email              String    @unique
  username           String    @unique
  name               String?
  password           String?
  image              String?
  emailVerified      DateTime?
  isMessageAccepting Boolean   @default(false)
  createdAt          DateTime  @default(now())

  accounts Account[]
  sessions Session[]
  messages Message[]

  @@index([id])
  @@index([username])
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Used by email provider
model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Message {
  id        String   @id @default(cuid())
  username  String
  content   String   @db.Text
  createdAt DateTime @default(now())

  User User @relation(fields: [username], references: [username], onDelete: Cascade)
}
